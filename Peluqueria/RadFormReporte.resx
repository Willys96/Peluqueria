<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="radMenuItem1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        n6A/e+21/wLSG2pQEBGcowAAAABJRU5ErkJggg==
</value>
  </data>
</root>